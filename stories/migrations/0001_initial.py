# Generated by Django 3.1.7 on 2021-04-01 10:23

import ckeditor_uploader.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=127, verbose_name='Title')),
                ('title_en', models.CharField(max_length=127, null=True, verbose_name='Title')),
                ('title_ru', models.CharField(max_length=127, null=True, verbose_name='Title')),
                ('title_az', models.CharField(max_length=127, null=True, verbose_name='Title')),
                ('image', models.ImageField(upload_to='categories_images', verbose_name='Image')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=127, verbose_name='Full Name')),
                ('email', models.EmailField(max_length=63, verbose_name='E-mail')),
                ('subject', models.CharField(max_length=255, verbose_name='Subject')),
                ('message', models.TextField(help_text='Write your message here.', verbose_name='Message')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Contact',
                'verbose_name_plural': 'Contacts',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='Subscriber',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=63, verbose_name='E-mail')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Subscriber',
                'verbose_name_plural': 'Subscribers',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='Title')),
                ('title_en', models.CharField(max_length=50, null=True, verbose_name='Title')),
                ('title_ru', models.CharField(max_length=50, null=True, verbose_name='Title')),
                ('title_az', models.CharField(max_length=50, null=True, verbose_name='Title')),
                ('order', models.PositiveIntegerField(default=1, verbose_name='Order')),
                ('is_published', models.BooleanField(default=True, verbose_name='Is Published')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
                'ordering': ('order', '-created_at'),
            },
        ),
        migrations.CreateModel(
            name='Story',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=127, verbose_name='Title')),
                ('image', models.ImageField(upload_to='stories_images', verbose_name='Image')),
                ('description', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='Description')),
                ('slug', models.SlugField(default='slug', verbose_name='Slug')),
                ('is_published', models.BooleanField(default=True, verbose_name='Is Published')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stories', to=settings.AUTH_USER_MODEL, verbose_name='Author')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stories', to='stories.category', verbose_name='Category')),
                ('tag', models.ManyToManyField(blank=True, db_index=True, to='stories.Tag', verbose_name='Tag')),
            ],
            options={
                'verbose_name': 'Story',
                'verbose_name_plural': 'Stories',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=127, verbose_name='Title')),
                ('short_description', models.CharField(max_length=255, verbose_name='Short Description')),
                ('image', models.ImageField(upload_to='recipes_images', verbose_name='Image')),
                ('description', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='Description')),
                ('slug', models.SlugField(default='slug', verbose_name='Slug')),
                ('is_published', models.BooleanField(default=True, verbose_name='Is Published')),
                ('is_approved', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recipes', to=settings.AUTH_USER_MODEL, verbose_name='Author')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recipes', to='stories.category', verbose_name='Category')),
                ('tag', models.ManyToManyField(blank=True, db_index=True, related_name='recipes', to='stories.Tag', verbose_name='Tag')),
            ],
            options={
                'verbose_name': 'Recipe',
                'verbose_name_plural': 'Recipes',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='CommentStory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='Text')),
                ('email', models.EmailField(max_length=63, verbose_name='E-mail')),
                ('website', models.TextField(verbose_name='Website')),
                ('message', models.TextField(verbose_name='Message')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments_story', to=settings.AUTH_USER_MODEL, verbose_name='Author')),
                ('parent_comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='story_sub_comments', to='stories.commentstory', verbose_name='Parent Comment')),
                ('story', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments_story', to='stories.story', verbose_name='Story')),
            ],
            options={
                'verbose_name': 'Story Comment',
                'verbose_name_plural': 'Story Comments',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='Text')),
                ('email', models.EmailField(max_length=63, verbose_name='E-mail')),
                ('website', models.TextField(verbose_name='Website')),
                ('message', models.TextField(verbose_name='Message')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to=settings.AUTH_USER_MODEL, verbose_name='Author')),
                ('parent_comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sub_comments', to='stories.comment', verbose_name='Parent Comment')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='stories.recipe', verbose_name='Recipe')),
            ],
            options={
                'verbose_name': 'Comment',
                'verbose_name_plural': 'Comments',
                'ordering': ('-created_at',),
            },
        ),
    ]
